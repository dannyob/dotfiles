#!/bin/sh
# Construct a crontab based on files in ~/.cron and load it into cron.
# The file ~/.cron/username/fqdn is appended to the common file in the same
# directory. Note that the common file may have "$HOME" in it, as in 
# "PATH=$HOME/bin". cron is too dumb to deal with that, so the expansion is
# handled by this script.
# 
# Based on code by by Joey Hess -- see
# http://svn.kitenet.net/*checkout*/trunk/bin/loadcron?rev=9887
#
# I don't use quite the same formatting as Joey -- it's stored instead as
# ~/.cron/username/shorthost

set -e

WARNING="# Automatically generated by loadcron; edit ~/.cron/ files instead."

if [ ! -z "`crontab -l`" ] && ! crontab -l | grep -q "$WARNING"; then
    if [ "$1" != "-f" ]; then
        echo "loadcron: Current crontab was not generated by loadcron; not
changing." >&2
        echo "loadcron: Use loadcron -f to override"
        exit
    else
        crontab -l > $HOME/tmp/oldcrontab
        echo "loadcron: Old crontab is backed up to $HOME/tmp/oldcrontab"
    fi
fi

dir=$HOME/.config/loadcron/`whoami`
if [ -d "$dir" ]; then
    echo  "EXISTS";
else
    echo "DOES NOT EXIST";
fi

if [ -d "$dir" ]; then
    (
        echo "$WARNING"
        echo
        echo "SHORTHOST=$SHORTHOST"
        if [ -e "$dir/common" ]; then
            echo "# From $dir/common:"
            sed "s!\$HOME!$HOME!g" < "$dir/common"
            echo
        fi
        hostfile="$dir/$SHORTHOST"
        if [ -e "$hostfile" ]; then
            echo "# From $hostfile:"
            cat "$hostfile"
            echo
        fi
    ) | crontab -
fi

